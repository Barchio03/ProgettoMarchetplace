Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/services/BuyerService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.services;\n\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.RequestEntity;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.stereotype.Service;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport unicam.IdSProject.dtos.EventDTO;\nimport unicam.IdSProject.dtos.ProductDTO;\nimport unicam.IdSProject.mappers.EventMapper;\nimport unicam.IdSProject.mappers.ProductMapper;\nimport unicam.IdSProject.models.*;\n\n@RequiredArgsConstructor\n@Service\npublic class BuyerService {\n\n    private final ProductMapper productMapper;\n    private final EventMapper eventMapper;\n\n    private final ProductBoard productBoard;\n\n    private final Buyer buyer;\n\n\n    public ResponseEntity<Object> addProductToShoppingKart(ProductDTO productDto, int quantity) {\n        Product product = productMapper.toEntityWithAllFields(productDto);\n        if (!productBoard.contains(product)) return new ResponseEntity<>(\"Il prodotto non esiste\", HttpStatus.BAD_REQUEST);\n        if (product.getStockNumber()> quantity) return new ResponseEntity<>(\"Non ci sono abbastanza scorte di questo prodotto\", HttpStatus.BAD_REQUEST);\n\n        QuantifiedProduct qProduct = new QuantifiedProduct(product, quantity);\n\n        if (buyer.getShoppingCart().addQuantifiedProduct(qProduct)) {\n            return new ResponseEntity<>(\"Prodotto aggiunto al carrello\", HttpStatus.OK);\n        } else return new ResponseEntity<>(\"Errore\", HttpStatus.BAD_REQUEST);\n\n    }\n\n    public ResponseEntity<Object> buyShoppingCart() {\n        if (buyer.getShoppingCart() == null || buyer.getShoppingCart().getQuantifiedProducts().isEmpty()){\n            return new ResponseEntity<>(\"Carrello Vuoto\", HttpStatus.BAD_REQUEST);\n        }\n\n        buyer.getShoppingCart().getQuantifiedProducts()\n                .stream().map(quantifiedProduct -> this.decreaseStock(quantifiedProduct));\n\n        buyer.getShoppingCart().clear();\n        String receipt = this.makeReceipt(buyer.getShoppingCart());\n        return new ResponseEntity<>(receipt, HttpStatus.OK);\n\n    }\n\n    public ResponseEntity<Object> subscribeToEvent(EventDTO eventDTO) {\n        Event event = eventMapper.toEntityWithAllFields(eventDTO);\n\n        if (event == null){\n            return new ResponseEntity<>(\"Evento nullo\", HttpStatus.BAD_REQUEST);\n        }\n\n        if (event.subscribe(buyer))\n            return new ResponseEntity<>(\"Iscrizione avvenuta con successo\", HttpStatus.OK);\n        else return new ResponseEntity<>(\"Utente già iscritto\", HttpStatus.CONFLICT);\n\n    }\n\n    public ResponseEntity<Object> unsubscribeToEvent(EventDTO eventDTO) {\n        Event event = eventMapper.toEntityWithAllFields(eventDTO);\n\n        if (event == null){\n            return new ResponseEntity<>(\"Evento nullo\", HttpStatus.BAD_REQUEST);\n        }\n\n        if (event.unsubscribe(buyer))\n            return new ResponseEntity<>(\"Disiscrizione avvenuta con successo\", HttpStatus.OK);\n        else return new ResponseEntity<>(\"Iscrizione non possibile\", HttpStatus.CONFLICT);\n    }\n\n\n    private QuantifiedProduct decreaseStock(QuantifiedProduct product) {\n        product.getProduct().setStockNumber(product.getProduct().getStockNumber()-product.getStockNumber());\n        return product;\n    }\n\n\n\n    private String makeReceipt(ShoppingCart shoppingCart){\n        String receipt = \"Ricevuta di \" + shoppingCart.getBuyer().getName() + \"\\n\";\n        for (QuantifiedProduct qProduct : shoppingCart.getQuantifiedProducts()){\n            String printProduct = \"Nome: \" + qProduct.getProduct().getName() +\n                    \"\\nNumero stock: \" + qProduct.getStockNumber() +\n                    \"\\nPrezzo: \" + qProduct.getProduct().getPrice() * qProduct.getStockNumber() +\"€\\n\\n\";\n            receipt = receipt + printProduct;\n        }\n        receipt = receipt + \"Prezzo totale: \" + shoppingCart.getTotalPrice() + \"$\";\n        shoppingCart.getBuyer().getMailbox().addMessage(receipt);\n        // Aggiungere ReceiptRepository per PlatformHandler\n        return receipt;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/services/BuyerService.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/services/BuyerService.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/services/BuyerService.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/services/BuyerService.java	(date 1758444001222)
@@ -2,15 +2,14 @@
 
 import lombok.RequiredArgsConstructor;
 import org.springframework.http.HttpStatus;
-import org.springframework.http.RequestEntity;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
-import org.springframework.web.bind.annotation.RequestBody;
 import unicam.IdSProject.dtos.EventDTO;
 import unicam.IdSProject.dtos.ProductDTO;
 import unicam.IdSProject.mappers.EventMapper;
 import unicam.IdSProject.mappers.ProductMapper;
 import unicam.IdSProject.models.*;
+import unicam.IdSProject.repositories.ProductBoard;
 
 @RequiredArgsConstructor
 @Service
Index: IdSProject 2/IdSProject/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.5.5</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>unicam</groupId>\n\t<artifactId>IdSProject</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>IdSProject</name>\n\t<description>Demo project for Spring Boot</description>\n\t<url/>\n\t<licenses>\n\t\t<license/>\n\t</licenses>\n\t<developers>\n\t\t<developer/>\n\t</developers>\n\t<scm>\n\t\t<connection/>\n\t\t<developerConnection/>\n\t\t<tag/>\n\t\t<url/>\n\t</scm>\n\t<properties>\n\t\t<java.version>17</java.version>\n\t\t<mapstruct.version>1.5.5.Final</mapstruct.version>\n\t</properties>\n\t<dependencies>\n\n\t\t<!-- Spring boot JPA -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\n\t\t<!-- Spring Web -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<!-- h2 -->\n\t\t<dependency>\n\t\t\t<groupId>com.h2database</groupId>\n\t\t\t<artifactId>h2</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t<artifactId>lombok</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.mapstruct</groupId>\n\t\t\t<artifactId>mapstruct</artifactId>\n\t\t\t<version>${mapstruct.version}</version>\n\t\t</dependency>\n\n\t\t<!-- Spring Test -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<!-- Spring Security -->\n\n<!--\t\t<dependency>-->\n<!--\t\t\t<groupId>org.springframework.boot</groupId>-->\n<!--\t\t\t<artifactId>spring-boot-starter-security</artifactId>-->\n<!--\t\t</dependency>-->\n\n<!--\t\t<dependency>-->\n<!--\t\t\t<groupId>org.thymeleaf.extras</groupId>-->\n<!--\t\t\t<artifactId>thymeleaf-extras-springsecurity6</artifactId>-->\n<!--\t\t\t&lt;!&ndash; Temporary explicit version to fix Thymeleaf bug &ndash;&gt;-->\n<!--\t\t\t<version>3.1.1.RELEASE</version>-->\n<!--\t\t</dependency>-->\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/pom.xml b/IdSProject 2/IdSProject/pom.xml
--- a/IdSProject 2/IdSProject/pom.xml	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/pom.xml	(date 1758443789037)
@@ -56,6 +56,11 @@
 			<artifactId>lombok</artifactId>
 		</dependency>
 
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-validation</artifactId>
+		</dependency>
+
 		<dependency>
 			<groupId>org.mapstruct</groupId>
 			<artifactId>mapstruct</artifactId>
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/BuyerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.controllers;\n\nimport jakarta.websocket.server.PathParam;\nimport lombok.AllArgsConstructor;\nimport lombok.NoArgsConstructor;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport unicam.IdSProject.dtos.ProductDTO;\nimport unicam.IdSProject.models.*;\nimport unicam.IdSProject.services.BuyerService;\n\n/**\n*\n* This class implements the methods for handling all the Buyer interaction with the marketplace\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n*\n*/\n\n@Controller\n@RequiredArgsConstructor\npublic class BuyerController {\n\n    private final ProductBoard productBoard;\n    private final EventBoard eventboard;\n\n    private final BuyerService buyerService;\n\n\n    /**\n     * This method adds a Product to the Shopping Cart.\n     *\n     * @param productDto, the Product that needs to be added.\n     *\n     * @return\n     */\n    @PostMapping(value = \"/addToShoppingKart\")\n    public ResponseEntity<Object> addToShoppingCart(@RequestBody ProductDTO productDto, @PathParam(\"quantity\") int quantity) {\n        return buyerService.addProductToShoppingKart(productDto, quantity);\n    }\n\n    /**\n     * This method is used to buy all the Products in the Shopping Cart.\n     *\n     * @return true  if the purchase was successfull, false otherwise\n     */\n    public ResponseEntity<Object> buyShoppingCart(){\n        return buyerService.buyShoppingCart();\n    }\n\n    /**\n     * This method allows to buy an Event tickey\n     *\n     * @param event, the Event from which buying the ticket\n     *\n     * @return true if the purchase was successfull, false otherwise\n     */\n    public boolean buyEventTicket(Event event){\n\n    }\n\n\n\n    \n    /**\n    * This method is used to update the Buyer about the Event status.\n    *\n    * @param event, the Event that is being observed.\n    */\n    public void update(Event event, String message) {\n        buyer.getMailbox().addMessage(\"message\");\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/BuyerController.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/BuyerController.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/BuyerController.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/BuyerController.java	(date 1758444001210)
@@ -1,8 +1,6 @@
 package unicam.IdSProject.controllers;
 
 import jakarta.websocket.server.PathParam;
-import lombok.AllArgsConstructor;
-import lombok.NoArgsConstructor;
 import lombok.RequiredArgsConstructor;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Controller;
@@ -10,6 +8,8 @@
 import org.springframework.web.bind.annotation.RequestBody;
 import unicam.IdSProject.dtos.ProductDTO;
 import unicam.IdSProject.models.*;
+import unicam.IdSProject.repositories.EventBoard;
+import unicam.IdSProject.repositories.ProductBoard;
 import unicam.IdSProject.services.BuyerService;
 
 /**
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.controllers;\nimport unicam.IdSProject.models.Distributor;\nimport unicam.IdSProject.models.Product;\nimport unicam.IdSProject.models.ProductBoard;\nimport unicam.IdSProject.models.ProductBundle;\nimport java.util.ArrayList;\n\n/**\n*\n* This class implements the methods used by the Distributor to interact with the marketplace\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n *\n*/\npublic class DistributorController {\n\n    private final Distributor distributor;\n    private ProductBoard productBoard;\n\n    /**\n    *\n    * This method creates a new DistributorController object\n    */\n    public DistributorController(Distributor distributor, ProductBoard productBoard){\n        this.distributor = distributor;\n        this.productBoard = productBoard;\n    }\n\n\n    /**\n     *\n     * This method creates a new Bundle with a set of Product present in the marketplace\n     *\n     * @param products: the Products present in the Bundle\n     *\n     * @return true, if the Bundle was created, false otherwise\n     */\n    public boolean createBundle(ArrayList<Product> products){\n        if (products.isEmpty()){\n            return false;\n        }\n        for(Product product : products){\n            if((product == null || !productBoard.contains(product))) {\n               return false;\n            }\n        }\n        ProductBundle bundle = new ProductBundle(products, distributor.getName());\n        return true;\n    }\n\n\n\n    /**\n     *\n     * This method adds a Product from the marketplace inside a Bundle\n     *\n     * @param bundle: the Bundle in question\n     *\n     * @param product: the Product that needs to be added\n     *\n     * @return true, if the Bundle was created, false otherwise\n     */\n    public boolean addProductToBundle(ProductBundle bundle, Product product){\n        if(product == null || !productBoard.contains(product)){\n            return false;\n        }\n        if(bundle.getProducts().contains(product)){\n            return false;\n        }\n        bundle.getProducts().add(product);\n        return true;\n    }\n\n\n\n    /**\n     *\n     * This method deletes a Bundle from the marketplace\n     *\n     * @param bundle: the Bundle in question\n     *\n     * @return true, if the Product was deleted, false otherwise\n     */\n    public boolean deleteBundle(ProductBundle bundle) {\n        if(bundle == null || !productBoard.contains(bundle)){\n            return false;\n        }\n        productBoard.removeProduct(bundle);\n        return true;\n    }\n\n\n    /**\n     *\n     * This method adds Distributor infos to a Product\n     *\n     * @param product: the Product to witch add the information\n     *\n     * @param info: the info about the Product\n     *\n     * @return true, if the information was added, false otherwise\n     */\n    public boolean addInfo(Product product, String info) {\n        if (product == null || !productBoard.contains(product)) {\n            return false;\n        }\n        if (info == null || info.isEmpty()){\n            return false;\n        }\n        product.setDistributorDescription(info);\n        return true;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java	(date 1758444001206)
@@ -1,7 +1,7 @@
 package unicam.IdSProject.controllers;
 import unicam.IdSProject.models.Distributor;
 import unicam.IdSProject.models.Product;
-import unicam.IdSProject.models.ProductBoard;
+import unicam.IdSProject.repositories.ProductBoard;
 import unicam.IdSProject.models.ProductBundle;
 import java.util.ArrayList;
 
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/MarketController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.controllers;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport unicam.IdSProject.models.*;\n\n\n/**\n*\n* This class implements the methods and the features of the marketplace\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n*/\n@Controller\npublic class MarketController {\n\n    private final ProductBoard productBoard;\n\n    @Autowired\n    private RequestHandler requestHandler;\n\n    private final Seller seller;\n    private final Buyer buyer;\n    private final Animator animator;\n    private final PlatformHandler platformHandler;\n\n    /**\n    * This method creates a new MarketController object\n    */\n    public MarketController(){\n        this.productBoard = new ProductBoard();\n        //this.requestHandler = new RequestHandler();\n        this.seller=new Seller(\"Vendor 1\", \"Just a vendor\");\n        this.buyer=new Buyer();\n        this.animator=new Animator(\"Animator 1\", \"Just an animator\");\n        this.platformHandler=new PlatformHandler();\n\n        Product product = new ProducerProduct();\n        product.setName(\"Prodotto A\");\n        product.setDescription(\"Un prodotto generico\");\n        product.setPrice(5);\n        product.setStockNumber(5);\n        productBoard.addProduct(product);\n\n        seller.setName(\"Vendor 1\");\n        seller.setDescription(\"Just a vendor\");\n        seller.setLocation(new Location(\"43.000 N\", \"12.000 E\"));\n        seller.getMailbox().addMessage(\"mi vedi?\");\n    }\n\n    // -- MARKET --\n    /**\n    * This method return the products from the product board and sets a route to it\n    */\n    @RequestMapping(value=\"/market\")\n    public ResponseEntity<Object> getProducts(){\n        return new ResponseEntity<>(productBoard.getProducts(), HttpStatus.OK);\n    }\n\n    /**\n    * This method return the profile of a specified user and sets a route to it\n    */\n    @RequestMapping(value = \"/profile/{user}\")\n    public ResponseEntity<Object> showProfile(@PathVariable(\"user\") String user){\n        return switch (user) {\n            case \"seller\" -> new ResponseEntity<>(seller.toString(), HttpStatus.OK);\n            case \"buyer\" -> new ResponseEntity<>(buyer, HttpStatus.OK);\n            case \"animator\" -> new ResponseEntity<>(animator, HttpStatus.OK);\n            default -> new ResponseEntity<>(\"Il profilo \" + user + \" non esiste\", HttpStatus.NOT_FOUND);\n        };\n    }\n\n    /**\n    * This method returns the mailbox of a specified user and sets a route to it\n    */\n    @RequestMapping(value=\"/profile/{user}/mailbox\")\n    public ResponseEntity<Object> openSellerMailbox(@PathVariable(\"user\") String user){\n        return switch (user) {\n            case \"seller\" -> new ResponseEntity<>(seller.getMailbox().getMessages(), HttpStatus.OK);\n            case \"buyer\" -> new ResponseEntity<>(buyer.getMailbox().getMessages(), HttpStatus.OK);\n            case \"animator\" -> new ResponseEntity<>(animator.getMailbox().getMessages(), HttpStatus.OK);\n            case \"handler\" -> new ResponseEntity<>(platformHandler.getMailbox().getMessages(), HttpStatus.OK);\n            default -> new ResponseEntity<>(\"Il profilo \" + user + \" non ha una mailbox\", HttpStatus.NOT_FOUND);\n        };\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/MarketController.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/MarketController.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/MarketController.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/MarketController.java	(date 1758444001240)
@@ -7,6 +7,8 @@
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
 import unicam.IdSProject.models.*;
+import unicam.IdSProject.repositories.ProductBoard;
+import unicam.IdSProject.repositories.RequestHandler;
 
 
 /**
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/AcceptVisitor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\nimport unicam.IdSProject.models.Event;\nimport unicam.IdSProject.models.EventBoard;\nimport unicam.IdSProject.models.Product;\nimport unicam.IdSProject.models.ProductBoard;\n\n/**\n*\n * This class contains the logic behind the acceptance of a Visitable object\n *\n * @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi \n *\n */\n@Component\npublic class AcceptVisitor implements Visitor {\n\n    @Autowired\n    private final ProductBoard productBoard;\n    @Autowired\n    private final EventBoard eventBoard;\n\n    /**\n    * This method creates a new AcceptVisitor object\n    */\n    @Autowired\n    public AcceptVisitor(ProductBoard productBoard, EventBoard eventBoard) {\n        this.productBoard=productBoard;\n        this.eventBoard=eventBoard;\n    }\n\n    @Override\n    public void visit(Product product) {\n        productBoard.addProduct(product);\n        product.getCreator().getMailbox().addMessage(\"La tua richiesta per il prodotto \"+\n                product.getName()+ \" è stata accettata\");\n    }\n\n    @Override\n    public void visit(Event event) {\n        eventBoard.addEvent(event);\n        event.getCreator().getMailbox().addMessage(\"La tua richiesta per l'evento \"+\n                event.getName()+ \" è stata accettata\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/AcceptVisitor.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/AcceptVisitor.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/AcceptVisitor.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/AcceptVisitor.java	(date 1758444001238)
@@ -2,9 +2,9 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 import unicam.IdSProject.models.Event;
-import unicam.IdSProject.models.EventBoard;
+import unicam.IdSProject.repositories.EventBoard;
 import unicam.IdSProject.models.Product;
-import unicam.IdSProject.models.ProductBoard;
+import unicam.IdSProject.repositories.ProductBoard;
 
 /**
 *
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/OpenVisitor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject;\nimport unicam.IdSProject.models.Event;\nimport unicam.IdSProject.models.Product;\nimport unicam.IdSProject.models.RequestHandler;\n\n/**\n*\n * This class contains the logic behind the opening of a Visitable object\n *\n * @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi \n *\n */\npublic class OpenVisitor implements Visitor {\n\n    private RequestHandler requestHandler;\n\n    @Override\n    public void visit(Product product) {\n        product.toString();\n    }\n\n    @Override\n    public void visit(Event event) {\n        event.toString();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/OpenVisitor.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/OpenVisitor.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/OpenVisitor.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/OpenVisitor.java	(date 1758444001233)
@@ -1,7 +1,7 @@
 package unicam.IdSProject;
 import unicam.IdSProject.models.Event;
 import unicam.IdSProject.models.Product;
-import unicam.IdSProject.models.RequestHandler;
+import unicam.IdSProject.repositories.RequestHandler;
 
 /**
 *
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/PlatformHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.models;\n\nimport unicam.IdSProject.controllers.Curator;\nimport java.util.ArrayList;\n\n/**\n*\n* This class represents the Platform Handler of the marketplace\n*\n* @author Aguiari Erika, Ilaria Morettini, Barchiesi Luca\n*\n*/\npublic class PlatformHandler {\n\n    private Mailbox mailbox;\n    private ArrayList<Curator> curators;\n\n    /**\n    * This method creates a new PlatformHandler object\n    */\n    public PlatformHandler(){\n    }\n\n\n    \n    public Mailbox getMailbox() {\n        return mailbox;\n    }\n\n    public ArrayList<Curator> getCurators(){\n        return curators;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/PlatformHandler.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/PlatformHandler.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/PlatformHandler.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/PlatformHandler.java	(date 1758444001201)
@@ -1,6 +1,6 @@
 package unicam.IdSProject.models;
 
-import unicam.IdSProject.controllers.Curator;
+import unicam.IdSProject.controllers.CuratorController;
 import java.util.ArrayList;
 
 /**
@@ -13,7 +13,7 @@
 public class PlatformHandler {
 
     private Mailbox mailbox;
-    private ArrayList<Curator> curators;
+    private ArrayList<CuratorController> curators;
 
     /**
     * This method creates a new PlatformHandler object
@@ -27,7 +27,7 @@
         return mailbox;
     }
 
-    public ArrayList<Curator> getCurators(){
+    public ArrayList<CuratorController> getCurators(){
         return curators;
     }
 
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/ProductBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/ProductBoard.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/ProductBoard.java
rename from IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/ProductBoard.java
rename to IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/ProductBoard.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/ProductBoard.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/ProductBoard.java	(date 1758444001230)
@@ -1,5 +1,8 @@
-package unicam.IdSProject.models;
+package unicam.IdSProject.repositories;
 import org.springframework.stereotype.Component;
+import unicam.IdSProject.models.Product;
+import unicam.IdSProject.models.Seller;
+
 import java.util.ArrayList;
 
 /**
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/AnimatorController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.controllers;\n\nimport jakarta.websocket.server.PathParam;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport unicam.IdSProject.models.EventBoard;\nimport unicam.IdSProject.models.Animator;\nimport unicam.IdSProject.models.Event;\nimport unicam.IdSProject.models.RequestHandler;\n\n/**\n*\n* This class implements the methods for handling all the Animator interaction with the marketplace\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n*\n*/\npublic class AnimatorController {\n\n    @Autowired\n    private RequestHandler requestHandler;\n    @Autowired\n    private EventBoard eventBoard;\n\n    private final Animator animator;\n\n    public AnimatorController(Animator animator){\n        this.animator = animator;\n    }\n\n\n\n    /**\n     * This method is used to create a new event\n     *\n     * @param event , the body of the event that needs to be created\n     *\n     * @return ResponseEntity<Object>, the response about the procedure\n     */\n    @RequestMapping(value = \"/animator/addEvent\")\n    public ResponseEntity<Object> addEvent(@RequestBody Event event){\n        event.setCreator(animator);\n        if(!eventBoard.contains(event)){\n            if (requestHandler.addEvent(event)) {\n                return new ResponseEntity<>(\"Evento in processo di verifica\", HttpStatus.CREATED);\n            }\n            return new ResponseEntity<>(\"Richiesta già in atto\", HttpStatus.BAD_REQUEST);\n        }\n        return new ResponseEntity<>(\"L'evento esiste già\", HttpStatus.BAD_REQUEST);\n\n\n    }\n\n    /**\n     * This method is used to create a new event\n     *\n     * @param id , the id of the event that needs to be deleted\n     *\n     * @return ResponseEntity<Object>, the response about the procedure\n     */\n    @RequestMapping(value = \"/animator/removeEvent\")\n    public ResponseEntity<Object> removeEvent(@PathParam(\"id\") int id) {\n        if (eventBoard.removeEvent(id)) {\n            return new ResponseEntity<>(\"Evento rimosso con successo\", HttpStatus.OK);\n        }\n        return new ResponseEntity<>(\"Id non pervenuto\", HttpStatus.NOT_FOUND);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/AnimatorController.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/AnimatorController.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/AnimatorController.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/AnimatorController.java	(date 1758444001235)
@@ -6,10 +6,10 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
-import unicam.IdSProject.models.EventBoard;
+import unicam.IdSProject.repositories.EventBoard;
 import unicam.IdSProject.models.Animator;
 import unicam.IdSProject.models.Event;
-import unicam.IdSProject.models.RequestHandler;
+import unicam.IdSProject.repositories.RequestHandler;
 
 /**
 *
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/RequestHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/RequestHandler.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/RequestHandler.java
rename from IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/RequestHandler.java
rename to IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/RequestHandler.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/RequestHandler.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/RequestHandler.java	(date 1758444001218)
@@ -1,5 +1,8 @@
-package unicam.IdSProject.models;
+package unicam.IdSProject.repositories;
 import org.springframework.stereotype.Component;
+import unicam.IdSProject.models.Event;
+import unicam.IdSProject.models.Product;
+
 import java.util.ArrayList;
 
 /**
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/SellerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.controllers;\n\nimport jakarta.websocket.server.PathParam;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport unicam.IdSProject.*;\nimport unicam.IdSProject.models.*;\n\n/**\n*\n* This class implements the methods of a Seller used to interact with the marketplace\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n*/\npublic class SellerController {\n\n    @Autowired\n    private RequestHandler requestHandler;\n    @Autowired\n    private ProductBoard productBoard;\n\n    private final Seller seller;\n\n    /**\n    * This method creates a new SellerController object\n    */\n    public SellerController(Seller seller){\n        this.seller = seller;\n    }\n\n\n    // -- PRODUCER --\n    /**\n    * This method implements the feature for a Seller with tag Producer to add a Product and sets a route for it\n    */\n    @RequestMapping(value = \"/producer/addProduct\")\n    public ResponseEntity<Object> addProducerProduct(@RequestBody ProducerProduct product){\n        if (seller.getTags().contains(Tag.PRODUCER)) {\n            product.setCreator(seller);\n            if(!productBoard.contains(product)){\n                if (requestHandler.addProduct(product))\n                    return new ResponseEntity<>(\"Prodotto in processo di verifica\", HttpStatus.CREATED);\n                else return new ResponseEntity<>(\"Richiesta già in atto\", HttpStatus.BAD_REQUEST);\n            }\n            return new ResponseEntity<>(\"Il prodotto è già presente\", HttpStatus.BAD_REQUEST);\n        } else return new ResponseEntity<>(\"Non autorizzato\", HttpStatus.UNAUTHORIZED);\n    }\n\n    // -- TRANSFORMER --\n    /**\n    * This method implements the feature for a Seller with tag Transformer to add a Product and sets a route for it\n    */\n    @RequestMapping(value = \"/transformer/addProduct\")\n    public ResponseEntity<Object> addTransformerProduct(@RequestBody TransformerProduct product){\n        if (seller.getTags().contains(Tag.TRANSFORMER)) {\n            product.setCreator(seller);\n            if(!productBoard.contains(product)){\n                if (requestHandler.addProduct(product))\n                    return new ResponseEntity<>(\"Prodotto in processo di verifica\", HttpStatus.CREATED);\n                else return new ResponseEntity<>(\"Richiesta già in atto\", HttpStatus.BAD_REQUEST);\n            }\n            return new ResponseEntity<>(\"Il prodotto è già presente\", HttpStatus.BAD_REQUEST);\n        }\n        return new ResponseEntity<>(\"Non autorizzato\", HttpStatus.UNAUTHORIZED);\n    }\n\n    /**\n    * This method implements the method for removing a Product made by the Seller from the marketplace and sets a route for it\n    */\n    @RequestMapping(value = \"/removeProduct\")\n    public ResponseEntity<Object> removeProduct(@PathParam(\"id\") int id) {\n        if (productBoard.removeProduct(id)){\n            return new ResponseEntity<>(\"Prodotto rimosso con successo\", HttpStatus.OK);\n        }\n        return new ResponseEntity<>(\"Id non pervenuto\", HttpStatus.NOT_FOUND);\n\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/SellerController.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/SellerController.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/SellerController.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/SellerController.java	(date 1758444001212)
@@ -6,8 +6,10 @@
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
-import unicam.IdSProject.*;
+import unicam.IdSProject.enumerations.Tag;
 import unicam.IdSProject.models.*;
+import unicam.IdSProject.repositories.ProductBoard;
+import unicam.IdSProject.repositories.RequestHandler;
 
 /**
 *
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/SellerDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.dtos;\n\nimport unicam.IdSProject.models.Location;\nimport unicam.IdSProject.models.Mailbox;\nimport unicam.IdSProject.Tag;\n\nimport java.util.ArrayList;\n\npublic class SellerDTO {\n\n    private String name;\n    private String description;\n    private Location location;\n    private ArrayList<Tag> tags;\n    private final Mailbox mailbox;\n\n    public SellerDTO(String name, String description, Location location, ArrayList<Tag> tags ,Mailbox mailbox){\n        this.name = name;\n        this.description = description;\n        this.location = location;\n        this.tags = tags;\n        this.mailbox = mailbox;\n    }\n\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    public Location getLocation() {\n        return location;\n    }\n\n    public void setLocation(Location location) {\n        this.location = location;\n    }\n\n    public ArrayList<Tag> getTags() {\n        return tags;\n    }\n\n    public void setTags(ArrayList<Tag> tags) {\n        this.tags = tags;\n    }\n\n    public Mailbox getMailbox() {\n        return mailbox;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/SellerDTO.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/SellerDTO.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/SellerDTO.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/SellerDTO.java	(date 1758444001190)
@@ -2,7 +2,7 @@
 
 import unicam.IdSProject.models.Location;
 import unicam.IdSProject.models.Mailbox;
-import unicam.IdSProject.Tag;
+import unicam.IdSProject.enumerations.Tag;
 
 import java.util.ArrayList;
 
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Seller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.models;\nimport unicam.IdSProject.Tag;\nimport java.util.ArrayList;\n\n/**\n*\n* This class represents a Seller\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n*\n*/\npublic class Seller {\n\n    private String name;\n    private String description;\n    private Location location;\n    private ArrayList<Tag> tags;\n    private final Mailbox mailbox;\n    private int id;\n    private static int currentId;\n\n    \n    /**\n    * This method creates a new Seller object\n    */\n    public Seller(String name, String description ) {\n        this.mailbox=new Mailbox();\n    }\n\n    \n    private static int getCurrentId() {\n        return currentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    public Location getLocation() {\n        return location;\n    }\n\n    public void setLocation(Location location) {\n        this.location = location;\n    }\n\n    public ArrayList<Tag> getTags() {\n        return tags;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public Mailbox getMailbox() {\n        return mailbox;\n    }\n\n    @Override\n    public String toString(){\n        return \"Nome: \"+this.getName() +\n                \"\\nDescrizione: \"+this.getDescription() +\n                \"\\nLocation: \"+this.getLocation().toString();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Seller.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Seller.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Seller.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Seller.java	(date 1758444001215)
@@ -1,5 +1,5 @@
 package unicam.IdSProject.models;
-import unicam.IdSProject.Tag;
+import unicam.IdSProject.enumerations.Tag;
 import java.util.ArrayList;
 
 /**
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Receipt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Receipt.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Receipt.java
new file mode 100644
--- /dev/null	(date 1758443789049)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Receipt.java	(date 1758443789049)
@@ -0,0 +1,24 @@
+package unicam.IdSProject.models;
+
+import jakarta.persistence.*;
+import jakarta.validation.constraints.NotNull;
+import lombok.Getter;
+import lombok.Setter;
+
+@Entity
+@Getter
+@Setter
+@Table(name="receipts")
+public class Receipt {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    @NotNull
+    private Buyer buyer;
+
+    @NotNull
+    private String receipt;
+
+}
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/EventBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/EventBoard.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/EventBoard.java
rename from IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/EventBoard.java
rename to IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/EventBoard.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/EventBoard.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/repositories/EventBoard.java	(date 1758444001228)
@@ -1,6 +1,8 @@
-package unicam.IdSProject.models;
+package unicam.IdSProject.repositories;
 
 import org.springframework.stereotype.Component;
+import unicam.IdSProject.models.Animator;
+import unicam.IdSProject.models.Event;
 
 import java.util.ArrayList;
 
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/Tag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/Tag.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/enumerations/Tag.java
rename from IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/Tag.java
rename to IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/enumerations/Tag.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/Tag.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/enumerations/Tag.java	(date 1758444001196)
@@ -1,4 +1,4 @@
-package unicam.IdSProject;
+package unicam.IdSProject.enumerations;
 
 /**
 * Tipi di Venditore
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/Curator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/Curator.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/CuratorController.java
rename from IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/Curator.java
rename to IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/CuratorController.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/Curator.java	(revision 58f23084a0a51839624466044bf7bc1cc3a9bd37)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/CuratorController.java	(date 1758444001225)
@@ -7,7 +7,7 @@
 import org.springframework.web.bind.annotation.RequestMapping;
 import unicam.IdSProject.AcceptVisitor;
 import unicam.IdSProject.DenyVisitor;
-import unicam.IdSProject.models.RequestHandler;
+import unicam.IdSProject.repositories.RequestHandler;
 import unicam.IdSProject.Visitable;
 
 /**
@@ -18,7 +18,7 @@
 *
 */
 @Controller
-public class Curator {
+public class CuratorController {
 
     private final AcceptVisitor acceptVisitor;
     private final RequestHandler requestHandler;
@@ -27,7 +27,7 @@
     /**
      * This method creates a new Curator object
      */
-    public Curator(AcceptVisitor acceptVisitor, RequestHandler requestHandler) {
+    public CuratorController(AcceptVisitor acceptVisitor, RequestHandler requestHandler) {
         this.acceptVisitor=acceptVisitor;
         this.requestHandler=requestHandler;
     }
