Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.controllers;\nimport unicam.IdSProject.models.Distributor;\nimport unicam.IdSProject.models.Product;\nimport unicam.IdSProject.models.ProductBoard;\nimport unicam.IdSProject.models.ProductBundle;\nimport java.util.ArrayList;\n\n/**\n*\n* This class implements the methods used by the Distributor to interact with the marketplace\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n *\n*/\npublic class DistributorController {\n\n    private final Distributor distributor;\n    private ProductBoard productBoard;\n\n    /**\n    *\n    * This method creates a new DistributorController object\n    */\n    public DistributorController(Distributor distributor, ProductBoard productBoard){\n        this.distributor = distributor;\n        this.productBoard = productBoard;\n    }\n\n\n    /**\n     *\n     * This method creates a new Bundle with a set of Product present in the marketplace\n     *\n     * @param products: the Products present in the Bundle\n     *\n     * @return true, if the Bundle was created, false otherwise\n     */\n    public boolean createBundle(ArrayList<Product> products){\n        if (products.isEmpty()){\n            return false;\n        }\n        for(Product product : products){\n            if((product == null || !productBoard.contains(product))) {\n               return false;\n            }\n        }\n        ProductBundle bundle = new ProductBundle(products, distributor.getName());\n        return true;\n    }\n\n\n\n    /**\n     *\n     * This method adds a Product from the marketplace inside a Bundle\n     *\n     * @param bundle: the Bundle in question\n     *\n     * @param product: the Product that needs to be added\n     *\n     * @return true, if the Bundle was created, false otherwise\n     */\n    public boolean addProductToBundle(ProductBundle bundle, Product product){\n        if(product == null || !productBoard.contains(product)){\n            return false;\n        }\n        if(bundle.getProducts().contains(product)){\n            return false;\n        }\n        bundle.getProducts().add(product);\n        return true;\n    }\n\n\n\n    /**\n     *\n     * This method deletes a Bundle from the marketplace\n     *\n     * @param bundle: the Bundle in question\n     *\n     * @return true, if the Product was deleted, false otherwise\n     */\n    public boolean deleteBundle(ProductBundle bundle) {\n        if(bundle == null || !productBoard.contains(bundle)){\n            return false;\n        }\n        productBoard.removeProduct(bundle);\n        return true;\n    }\n\n\n    /**\n     *\n     * This method adds Distributor infos to a Product\n     *\n     * @param product: the Product to witch add the information\n     *\n     * @param info: the info about the Product\n     *\n     * @return true, if the information was added, false otherwise\n     */\n    public boolean addInfo(Product product, String info) {\n        if (product == null || !productBoard.contains(product)) {\n            return false;\n        }\n        if (info == null || info.isEmpty()){\n            return false;\n        }\n        product.setDistributorDescription(info);\n        return true;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java	(revision a56a64577f6733384d55556a34c6820a26c35eb8)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/controllers/DistributorController.java	(date 1758357378438)
@@ -3,6 +3,7 @@
 import unicam.IdSProject.models.Product;
 import unicam.IdSProject.models.ProductBoard;
 import unicam.IdSProject.models.ProductBundle;
+
 import java.util.ArrayList;
 
 /**
@@ -10,104 +11,111 @@
 * This class implements the methods used by the Distributor to interact with the marketplace
 *
 * @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi
- *
 */
 public class DistributorController {
 
     private final Distributor distributor;
     private ProductBoard productBoard;
+    private ArrayList<ProductBundle> bundlesList;
 
     /**
     *
     * This method creates a new DistributorController object
     */
-    public DistributorController(Distributor distributor, ProductBoard productBoard){
+    public DistributorController(Distributor distributor, ProductBoard productBoard, ArrayList<ProductBundle> bundlesList){
         this.distributor = distributor;
         this.productBoard = productBoard;
+        this.bundlesList = bundlesList;
     }
 
 
     /**
      *
-     * This method creates a new Bundle with a set of Product present in the marketplace
+     * This method creates a new bundle with a set of product present in the marketplace
      *
-     * @param products: the Products present in the Bundle
+     * @param products: the products present in the bundle
      *
-     * @return true, if the Bundle was created, false otherwise
+     * @return true, if the bundle was created, false otherwise
      */
     public boolean createBundle(ArrayList<Product> products){
         if (products.isEmpty()){
-            return false;
+            throw new IllegalArgumentException("Deve essere inserito almeno un prodotto");
         }
         for(Product product : products){
             if((product == null || !productBoard.contains(product))) {
-               return false;
+                throw new IllegalArgumentException("Prodotti inseriti non validi");
             }
         }
         ProductBundle bundle = new ProductBundle(products, distributor.getName());
+        bundlesList.add(bundle);
         return true;
     }
 
-
-
     /**
      *
-     * This method adds a Product from the marketplace inside a Bundle
+     * This method adds a product from the marketplace inside a bundle
      *
-     * @param bundle: the Bundle in question
+     * @param bundle: the bundle in question
      *
-     * @param product: the Product that needs to be added
+     * @param product: the product that needs to be added
      *
-     * @return true, if the Bundle was created, false otherwise
+     * @return true, if the bundle was created, false otherwise
      */
     public boolean addProductToBundle(ProductBundle bundle, Product product){
         if(product == null || !productBoard.contains(product)){
-            return false;
+            throw new IllegalArgumentException("Prodotto inserito non valido");
         }
         if(bundle.getProducts().contains(product)){
-            return false;
+            throw new IllegalArgumentException("Il prodotto è già presente nel bundle");
         }
         bundle.getProducts().add(product);
         return true;
     }
 
 
-
     /**
      *
-     * This method deletes a Bundle from the marketplace
+     * This method deletes a product from a bundle
+     *
+     * @param bundle: the bundle in question
      *
-     * @param bundle: the Bundle in question
+     * @param product: the product that needs to be added
      *
-     * @return true, if the Product was deleted, false otherwise
+     * @return true, if the product was deleted, false otherwise
      */
-    public boolean deleteBundle(ProductBundle bundle) {
-        if(bundle == null || !productBoard.contains(bundle)){
-            return false;
+    public boolean deleteBundle(ProductBundle bundle, Product product) {
+        if(product == null || !productBoard.contains(product)){
+            throw new IllegalArgumentException("Prodotto inserito non valido");
         }
-        productBoard.removeProduct(bundle);
+        if(!bundle.getProducts().contains(product)){
+            throw new IllegalArgumentException("Il prodotto non presente nel bundle");
+        }
+        bundle.getProducts().remove(product);
         return true;
     }
 
 
     /**
      *
-     * This method adds Distributor infos to a Product
+     * This method adds distributor infos to a product
      *
-     * @param product: the Product to witch add the information
+     * @param product: the product to witch add the information
      *
-     * @param info: the info about the Product
+     * @param info: the info abouct the product
      *
      * @return true, if the information was added, false otherwise
      */
     public boolean addInfo(Product product, String info) {
-        if (product == null || !productBoard.contains(product)) {
-            return false;
+        if(product == null || !productBoard.contains(product)){
+            throw new IllegalArgumentException("Prodotto inserito non valido");
         }
-        if (info == null || info.isEmpty()){
-            return false;
-        }
-        product.setDistributorDescription(info);
-        return true;
+        for(ProductBundle bundles : bundlesList){
+            ArrayList<Product> products = bundles.getProducts();
+            if (products.contains(product)){
+                product.setDistributorDescription(info);
+                return true;
+            }
+        }
+        throw new IllegalArgumentException("Prodotto non presente in alcun bundle");
     }
-}
\ No newline at end of file
+}
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/AnimatorDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.dtos;\n\nimport unicam.IdSProject.models.Mailbox;\n\n\n@Data\npublic class AnimatorDTO\n{\n    private String name;\n\n    private String description;\n\n    private Mailbox mailbox;\n\n    public AnimatorDTO(String name, String description,Mailbox mailbox){\n        this.name = name;\n        this.description = description;\n        this.mailbox = mailbox;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    public Mailbox getMailbox() {\n        return mailbox;\n    }\n\n    public void setMailbox(Mailbox mailbox) {\n        this.mailbox = mailbox;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/AnimatorDTO.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/AnimatorDTO.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/AnimatorDTO.java	(revision a56a64577f6733384d55556a34c6820a26c35eb8)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/dtos/AnimatorDTO.java	(date 1758357378464)
@@ -1,5 +1,6 @@
 package unicam.IdSProject.dtos;
 
+import lombok.Data;
 import unicam.IdSProject.models.Mailbox;
 
 
@@ -12,33 +13,4 @@
 
     private Mailbox mailbox;
 
-    public AnimatorDTO(String name, String description,Mailbox mailbox){
-        this.name = name;
-        this.description = description;
-        this.mailbox = mailbox;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public String getDescription() {
-        return description;
-    }
-
-    public void setDescription(String description) {
-        this.description = description;
-    }
-
-    public Mailbox getMailbox() {
-        return mailbox;
-    }
-
-    public void setMailbox(Mailbox mailbox) {
-        this.mailbox = mailbox;
-    }
 }
Index: IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Buyer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unicam.IdSProject.models;\n\n/**\n*\n* This class represents a Buyer\n*\n* @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi\n*/\npublic class Buyer {\n    \n    private String name;\n    private ShoppingCart shoppingCart; //Può essere final?\n    private Mailbox mailbox;\n    private int id;\n    private static int currentId;\n\n    /**\n    * This method creates a new Buyer object\n    */\n    public Buyer(String name){\n        this.name = name;\n    }\n\n    \n    \n    private static int getCurrentId() {\n        return currentId;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public ShoppingCart getShoppingCart(){ return shoppingCart; }\n\n    public int getId() {\n        return id;\n    }\n\n    public Mailbox getMailbox() {\n        return mailbox;\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Buyer.java b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Buyer.java
--- a/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Buyer.java	(revision a56a64577f6733384d55556a34c6820a26c35eb8)
+++ b/IdSProject 2/IdSProject/src/main/java/unicam/IdSProject/models/Buyer.java	(date 1758357812069)
@@ -1,11 +1,14 @@
 package unicam.IdSProject.models;
 
+import lombok.Getter;
+
 /**
 *
 * This class represents a Buyer
 *
 * @author Erika Aguiari, Ilaria Morettini, Luca Barchiesi
 */
+@Getter
 public class Buyer {
     
     private String name;
Index: IdSProject 2/IdSProject/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.5.5</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>unicam</groupId>\n\t<artifactId>IdSProject</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<name>IdSProject</name>\n\t<description>Demo project for Spring Boot</description>\n\t<url/>\n\t<licenses>\n\t\t<license/>\n\t</licenses>\n\t<developers>\n\t\t<developer/>\n\t</developers>\n\t<scm>\n\t\t<connection/>\n\t\t<developerConnection/>\n\t\t<tag/>\n\t\t<url/>\n\t</scm>\n\t<properties>\n\t\t<java.version>17</java.version>\n\t</properties>\n\t<dependencies>\n\n\t\t<!-- Spring boot JPA -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\n\t\t</dependency>\n\n\t\t<!-- Spring Web -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\n\t\t<!-- h2 -->\n\t\t<dependency>\n\t\t\t<groupId>com.h2database</groupId>\n\t\t\t<artifactId>h2</artifactId>\n\t\t\t<scope>runtime</scope>\n\t\t</dependency>\n\n\t\t<!-- Spring Test -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<!-- Spring Security -->\n\n<!--\t\t<dependency>-->\n<!--\t\t\t<groupId>org.springframework.boot</groupId>-->\n<!--\t\t\t<artifactId>spring-boot-starter-security</artifactId>-->\n<!--\t\t</dependency>-->\n\n<!--\t\t<dependency>-->\n<!--\t\t\t<groupId>org.thymeleaf.extras</groupId>-->\n<!--\t\t\t<artifactId>thymeleaf-extras-springsecurity6</artifactId>-->\n<!--\t\t\t&lt;!&ndash; Temporary explicit version to fix Thymeleaf bug &ndash;&gt;-->\n<!--\t\t\t<version>3.1.1.RELEASE</version>-->\n<!--\t\t</dependency>-->\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IdSProject 2/IdSProject/pom.xml b/IdSProject 2/IdSProject/pom.xml
--- a/IdSProject 2/IdSProject/pom.xml	(revision a56a64577f6733384d55556a34c6820a26c35eb8)
+++ b/IdSProject 2/IdSProject/pom.xml	(date 1758357378460)
@@ -50,6 +50,11 @@
 			<scope>runtime</scope>
 		</dependency>
 
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+		</dependency>
+
 		<!-- Spring Test -->
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
